#!/bin/bash

source easylog

VERBOSITY=0
CONVERSATION_ID=$(date "+%Y%m%d%H%M%S")

show_help() {
    cat << EOF
Usage: $(basename "$0") [options]
Options:
    -h        Show help message.
    -v        Increase verbosity of easylog messages.
    -i ID     Specify a conversation ID. (Optional, default is current timestamp)
EOF
}

process_commands() {
    local content="$1"
    local output=$(commandrouter "$content" 2>&1)
    elog DEBUG "Commandrouter output: '$output'" >&2
    echo "$output"
}

append_to_conversation() {
    local role="$1"
    local content="$2"
    # Assuming convmanager takes -d for directory and -a for appending a message
    convmanager -d "/tmp/$CONVERSATION_ID" -a "$role" "$content"
}

process_response() {
    local user_input="$1"
    user_input=$(process_commands "$user_input")
    append_to_conversation "user" "$user_input"
    local conversation_json=$(convmanager -d "/tmp/$CONVERSATION_ID" -s)
    local response=$(brainbridge --conversation "$conversation_json")
    elog DEBUG "Brainbridge response: $response"
    local response_content=$(echo "$response" | jq -r '.[0].content')
    local temp_file_response=$(mktemp)
    echo "$response_content" > "$temp_file_response"
    nvim "$temp_file_response"
    local refined_content=$(<"$temp_file_response")
    elog INFO "Refined content: $refined_content"
    elog INFO "Processing response through command router."
    local processed_response=$(process_commands "$refined_content")
    append_to_conversation "assistant" "$processed_response"
    elog INFO "Response appended to conversation."
    rm "$temp_file_response"
}

interact() {
    elog INFO "Interaction loop started."
    while true; do
    	local conversation_json=$(convmanager -d "/tmp/$CONVERSATION_ID" -s)
	echo $conversation_json
	echo "Provide your command (type 'exit' to quit):"
        read -r user_input
        elog INFO "User input: $user_input"
        if [[ "$user_input" == "exit" ]]; then
            elog INFO "User requested to exit."
            break
        fi
        local temp_file_input=$(mktemp)
        echo "$user_input" > "$temp_file_input"
        nvim "$temp_file_input"
        user_input=$(<"$temp_file_input")
        process_response "$user_input"
        rm "$temp_file_input"
    done
    elog INFO "Interaction loop ended."
}

while getopts "vhi:" opt; do
    case $opt in
        v) VERBOSITY=$((VERBOSITY+1)) ;;
        h) show_help; exit 0 ;;
        i) CONVERSATION_ID="$OPTARG" ;;
        *) show_help >&2; exit 1 ;;
    esac
done

shift $((OPTIND -1))

elog INFO "Using conversation ID: $CONVERSATION_ID"
interact
